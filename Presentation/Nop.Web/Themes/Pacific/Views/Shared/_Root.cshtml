@{
    Layout = "_Root.Head";
}

@await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.BodyStartHtmlTagAfter })
@{ await Html.RenderPartialAsync("_Notifications"); }
@{ await Html.RenderPartialAsync("_JavaScriptDisabledWarning"); }
@{ await Html.RenderPartialAsync("_OldInternetExplorerWarning"); }

<div class="master-wrapper-page">
    @{ await Html.RenderPartialAsync("_Header"); }
    <script asp-location="Footer">
        var localized_data = {
            AjaxCartFailure: "@T("AjaxCart.Failure")"
        };
        AjaxCart.init(false, '.header-links .cart-qty', '.header-links .wishlist-qty', '.flyout-cart-wrapper', localized_data);
    </script>
    <div class="overlayOffCanvas"></div>
    <div class="master-wrapper-content">
        <style>
            .store-search-box {
                position: absolute; /* 또는 fixed */
                left: 50%; /* 중앙에서 시작하도록 함 */
                transform: translateX(-50%); /* 요소의 너비의 절반만큼 왼쪽으로 이동시켜 정확하게 중앙에 위치하도록 함 */
                width: 80%;
                z-index: 100;
            }
            .search-box-opener {
                font-size: 24px; /* Or your preferred size */
            }
        </style>

        <div class="search-box store-search-box">
            @await Component.InvokeAsync(typeof(SearchBoxViewComponent))
            <div class="search-box-opener">@T("search")</div>
        </div>
        
        <!-- 빈 공간 추가 -->
        <div style="height: 50px;"></div>

        @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.ContentBefore })

        @await Component.InvokeAsync("Widget", new { widgetZone = "pacific_color_squares" })
        @if (IsSectionDefined("Breadcrumb"))
        {
            @RenderSection("Breadcrumb")
        }
        <div class="master-column-wrapper">
            @RenderBody()
        </div>
        @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.ContentAfter })

    </div>
    @await Component.InvokeAsync(typeof(FooterViewComponent))
</div>
@await Component.InvokeAsync(typeof(EuCookieLawViewComponent))
@await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.BodyEndHtmlTagBefore })